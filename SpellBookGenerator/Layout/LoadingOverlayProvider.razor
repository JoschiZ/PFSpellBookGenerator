@inject LoadingService LoadingService


<MudOverlay ZIndex="20000" @bind-Visible="@LoadingService.IsVisible" DarkBackground>
    <MudPaper MinHeight="40%" MinWidth="40%" Style="background:  rgba(39,39,47,0.8); padding: 10px">
        <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center">
            <MudProgressCircular Indeterminate Color="Color.Info" Size="Size.Large" Style="margin-bottom: 4 rem"/>
            @if (LoadingService.SteppedLoading)
            {
                <MudProgressLinear Striped Color="Color.Primary" Size="Size.Large" Max="@LoadingService.MaxSteps" Rounded Value="@LoadingService.CurrentSteppedValue"/>
            }
            <MudText Style="font-weight: bolder" Typo="Typo.h2" Color="Color.Info">@LoadingService.Message</MudText>
        </MudStack>
        <MudStack Reverse>
            @foreach (var message in LoadingService.MessageQue.Skip(Math.Max(0, LoadingService.MessageQue.Count - 5)))
            {
                <MudText Typo="Typo.subtitle1" Color="Color.Info">@message</MudText>
            }
        </MudStack>
    </MudPaper>
</MudOverlay>


@code{

    protected override void OnInitialized()
    {
        LoadingService.Provider = this;
    }

    public Task Update()
    {
        return InvokeAsync(StateHasChanged);
    }

}